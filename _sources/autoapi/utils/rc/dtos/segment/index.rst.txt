:py:mod:`utils.rc.dtos.segment`
===============================

.. py:module:: utils.rc.dtos.segment


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   utils.rc.dtos.segment.Operator
   utils.rc.dtos.segment.DataType
   utils.rc.dtos.segment.Segment
   utils.rc.dtos.segment.Condition
   utils.rc.dtos.segment.Expression
   utils.rc.dtos.segment.Field
   utils.rc.dtos.segment.Value




.. py:class:: Operator

   Bases: :py:obj:`str`, :py:obj:`enum.Enum`

   str(object='') -> str
   str(bytes_or_buffer[, encoding[, errors]]) -> str

   Create a new string object from the given object. If encoding or
   errors is specified, then the object must expose a data buffer
   that will be decoded using the given encoding and error handler.
   Otherwise, returns the result of object.__str__() (if defined)
   or repr(object).
   encoding defaults to sys.getdefaultencoding().
   errors defaults to 'strict'.

   .. py:attribute:: EqualTo
      :annotation: = EqualTo

      

   .. py:attribute:: Contains
      :annotation: = Contains

      

   .. py:attribute:: GreaterThan
      :annotation: = GreaterThan

      

   .. py:attribute:: LessThan
      :annotation: = LessThan

      

   .. py:attribute:: NotEqualTo
      :annotation: = NotEqualTo

      

   .. py:attribute:: RegEX
      :annotation: = RegEX

      

   .. py:attribute:: IsInList
      :annotation: = IsInList

      

   .. py:attribute:: GreaterOrEqual
      :annotation: = GreaterOrEqual

      

   .. py:attribute:: LesserOrEqual
      :annotation: = LesserOrEqual

      

   .. py:attribute:: IsNull
      :annotation: = IsNull

      

   .. py:attribute:: IsNotNull
      :annotation: = IsNotNull

      


.. py:class:: DataType

   Bases: :py:obj:`str`, :py:obj:`enum.Enum`

   str(object='') -> str
   str(bytes_or_buffer[, encoding[, errors]]) -> str

   Create a new string object from the given object. If encoding or
   errors is specified, then the object must expose a data buffer
   that will be decoded using the given encoding and error handler.
   Otherwise, returns the result of object.__str__() (if defined)
   or repr(object).
   encoding defaults to sys.getdefaultencoding().
   errors defaults to 'strict'.

   .. py:attribute:: DOUBLE
      :annotation: = DOUBLE

      

   .. py:attribute:: STRING
      :annotation: = STRING

      

   .. py:attribute:: LONG
      :annotation: = LONG

      

   .. py:attribute:: BOOLEAN
      :annotation: = BOOLEAN

      


.. py:class:: Segment(data={})

   .. py:method:: setData(self, data)


   .. py:method:: addCompareCondition(self, fieldName, operator: Operator, literalValue, literalDataType: DataType)


   .. py:method:: getData(self, num_rows=10)


   .. py:method:: new(name: str, description: str)
      :staticmethod:



.. py:class:: Condition(data)

   .. py:method:: setData(self, data)


   .. py:method:: new(expression)
      :staticmethod:



.. py:class:: Expression(data)

   .. py:method:: setData(self, data)


   .. py:method:: new(field, operator, value)
      :staticmethod:



.. py:class:: Field(data)

   .. py:method:: setData(self, data)


   .. py:method:: new(fieldName)
      :staticmethod:



.. py:class:: Value(data)

   .. py:method:: setData(self, data)


   .. py:method:: new(value, dataType)
      :staticmethod:



